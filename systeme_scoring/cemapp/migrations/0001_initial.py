# Generated by Django 5.1.3 on 2024-12-29 18:46

import datetime
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lieu', models.CharField(max_length=255)),
                ('adresse', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=13)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255)),
                ('date_naissance', models.DateField()),
                ('adresse', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('n_cin', models.CharField(max_length=12)),
                ('statut_familial', models.CharField(choices=[('celibataire', 'Célibataire'), ('marie', 'Marié(e)'), ('divorce', 'Divorcé(e)'), ('veuf', 'Veuf/Veuve')], max_length=50)),
                ('nbr_dependant', models.IntegerField(blank=True, null=True)),
                ('situation_professionnelle', models.CharField(choices=[('employe', 'Employé'), ('independant', 'Indépendant'), ('etudiant', 'Étudiant'), ('retraite', 'Retraité'), ('sans_emploi', 'Sans emploi')], max_length=50)),
                ('titre_emploie', models.CharField(blank=True, max_length=100, null=True)),
                ('nom_employeur', models.CharField(blank=True, max_length=255, null=True)),
                ('adresse_professionnelle', models.CharField(blank=True, max_length=255, null=True)),
                ('duree_emploie', models.IntegerField(blank=True, null=True)),
                ('revenu_mensuel', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('depense_mensuelles', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dettes_existantes', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('situation_bancaire', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('bon', 'Bon'), ('moyen', 'Moyen'), ('faible', 'Faible'), ('mauvais', 'Mauvais')], max_length=50, null=True)),
                ('historique_credit', models.TextField(blank=True, null=True)),
                ('solde_bancaire', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('secteur_activite', models.CharField(blank=True, choices=[('agriculture', 'Agriculture'), ('industrie', 'Industrie'), ('services', 'Services'), ('commerce', 'Commerce'), ('education', 'Éducation'), ('sante', 'Santé'), ('informatique', 'Informatique'), ('autres', 'Autres'), ('aucun', 'aucun')], max_length=100, null=True)),
                ('type_contrat', models.CharField(blank=True, choices=[('cdi', 'CDI'), ('cdd', 'CDD'), ('freelance', 'Freelance'), ('temporaire', 'Temporaire'), ('stage', 'Stage'), ('aucun', 'Aucun')], max_length=50, null=True)),
                ('valeur_actifs', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('montant_emprunts_en_cours', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('historique_paiement', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_document', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('client_status', models.CharField(choices=[('Nouveau', 'Nouveau Client'), ('Ancien', 'Ancien Client')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SousTypeCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('montant_min', models.DecimalField(decimal_places=2, default=300000, max_digits=12)),
                ('montant_max', models.DecimalField(decimal_places=2, max_digits=12)),
                ('duree_min', models.IntegerField()),
                ('duree_max', models.IntegerField()),
                ('taux_interet', models.DecimalField(decimal_places=2, max_digits=5)),
                ('prefixe', models.CharField(default='CPSA', max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nom', models.CharField(default='Anonyme', max_length=255)),
                ('prenom', models.CharField(default='Anonyme', max_length=255)),
                ('date_naissance', models.DateField(default=datetime.date(1990, 1, 1))),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('directeur_agence', "Directeur de l' Agence"), ('analyste_demande', 'Analyste des Demandes'), ('gestionnaire', 'Gestionnaire des Demandes'), ('service_client', 'Service Client'), ('agent_insoection', "Agent d' Inspection")], default='service_client', max_length=25)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('agence', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='cemapp.agence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemandeCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_credit', models.CharField(max_length=20, unique=True)),
                ('duree', models.IntegerField()),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_payer_mois', models.DecimalField(decimal_places=2, max_digits=10)),
                ('motif_credit', models.TextField()),
                ('date_demande', models.DateField(auto_now_add=True)),
                ('statut_demande', models.CharField(choices=[('en_attente_inspection', "En attente d' inspection"), ('en_attente_validation', 'En attente de validation'), ('en_attente_signature', 'En attente de signature'), ('approuve', 'Approuvé'), ('rejete', 'Rejeté'), ('termine', 'Terminé')], default='en_attente', max_length=25)),
                ('date_derniere_maj', models.DateField(auto_now_add=True)),
                ('agence', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='cemapp.agence')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.client')),
                ('enregistre_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_enregistrees', to=settings.AUTH_USER_MODEL)),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_traitees', to=settings.AUTH_USER_MODEL)),
                ('sous_type_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.soustypecredit')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_calculé', models.FloatField()),
                ('ratio_endettement', models.FloatField()),
                ('date_decision', models.DateField(default=datetime.date.today)),
                ('statut_final', models.CharField(choices=[('approuve', 'Approuvé'), ('rejete', 'Rejeté')], max_length=50)),
                ('motif_rejet', models.TextField(blank=True, null=True)),
                ('montant_accorde', models.FloatField(blank=True, null=True)),
                ('analyste_decision', models.CharField(blank=True, max_length=255, null=True)),
                ('justification_analyste', models.TextField(blank=True, null=True)),
                ('demande_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.demandecredit')),
            ],
        ),
        migrations.CreateModel(
            name='InspectionEnvironnement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_entreprise', models.CharField(max_length=255)),
                ('adresse', models.TextField()),
                ('secteur_activite', models.CharField(max_length=100)),
                ('statut_juridique', models.CharField(choices=[('individuelle', 'Entreprise individuelle'), ('sarl', 'SARL'), ('sa', 'SA'), ('autres', 'Autres')], max_length=50)),
                ('annee_creation', models.IntegerField()),
                ('etat_locaux', models.CharField(choices=[('excellent', 'Excellent'), ('bon', 'Bon'), ('moyen', 'Moyen'), ('mediocre', 'Médiocre')], max_length=50)),
                ('types_equipements', models.TextField(help_text='Liste des équipements disponibles')),
                ('nombre_employes', models.IntegerField()),
                ('qualification_personnel', models.TextField()),
                ('systeme_gestion', models.CharField(choices=[('manuel', 'Manuel'), ('informatise', 'Informatisé')], max_length=50)),
                ('revenu_moyen_mensuel', models.DecimalField(decimal_places=2, max_digits=12)),
                ('depenses_moyennes_mensuelles', models.DecimalField(decimal_places=2, max_digits=12)),
                ('rentabilite_estimee', models.DecimalField(decimal_places=2, help_text='Revenu - Dépenses', max_digits=12)),
                ('nombre_clients_reguliers', models.IntegerField()),
                ('zone_geographique_ventes', models.TextField()),
                ('niveau_concurrence', models.CharField(choices=[('faible', 'Faible'), ('moyen', 'Moyen'), ('eleve', 'Élevé')], max_length=50)),
                ('dependance_principale', models.TextField(blank=True, help_text='Dépendance à un fournisseur ou client spécifique', null=True)),
                ('date_inspection', models.DateField(auto_now_add=True)),
                ('demande_inspectee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_inspectee', to='cemapp.demandecredit')),
                ('inspecte_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inspection Environnement',
                'verbose_name_plural': 'Inspections Environnements',
                'ordering': ['-date_inspection'],
            },
        ),
        migrations.CreateModel(
            name='RendezvousFinalisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut_rendezvous', models.DateTimeField()),
                ('date_fin_rendezvous', models.DateTimeField()),
                ('termine', models.BooleanField(default=False)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('modification_count', models.PositiveIntegerField(default=0)),
                ('analyste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.demandecredit')),
            ],
        ),
        migrations.CreateModel(
            name='RendezvousInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rendezvous', models.DateTimeField()),
                ('termine', models.BooleanField(default=False)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('modification_count', models.PositiveIntegerField(default=0)),
                ('agent_recouvrement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.demandecredit')),
            ],
        ),
        migrations.AddField(
            model_name='soustypecredit',
            name='type_credit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cemapp.typecredit'),
        ),
        migrations.CreateModel(
            name='RemboursementCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paiement', models.DateTimeField(default=django.utils.timezone.now)),
                ('somme_paye', models.DecimalField(decimal_places=2, max_digits=10)),
                ('somme_attendu', models.DecimalField(decimal_places=2, max_digits=10)),
                ('numero_paiement', models.IntegerField()),
                ('type_paiement', models.CharField(choices=[('normal', 'Normal'), ('anticipe', 'Remboursement anticipé')], default='normal', max_length=20)),
                ('statut', models.CharField(choices=[('payé', 'Payé'), ('en_retard', 'En Retard'), ('anticipé', 'Anticipé')], default='payé', max_length=20)),
                ('date_echeance', models.DateField(editable=False)),
                ('penalite', models.DecimalField(decimal_places=2, max_digits=10)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remboursements', to='cemapp.demandecredit')),
            ],
            options={
                'ordering': ['numero_paiement'],
                'unique_together': {('demande', 'numero_paiement')},
            },
        ),
    ]
